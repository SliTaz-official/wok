get_locale()
{
	[ -z "$CHARMAP" ] && CHARMAP='UTF-8'

	case "$SLITAZ_ARCH" in
		arm*) ;;
		i?86)
			# Get translated Openbox menu from SliTaz sub project slitaz-configs
			obmenu="$WOK/slitaz-configs/install/etc/xdg/openbox/menu.$LOCALE.xml"
			if [ -f "$obmenu" ]; then
				mkdir -p $fs/etc/xdg/openbox
				echo "* Found $LOCALE translations for: openbox menu"
				cp $obmenu $fs/etc/xdg/openbox
			fi
			;;
	esac

	# Get the core packages messages.
	case "$SLITAZ_ARCH" in
		arm*) CORE_PKGS="$CORE_PKGS_ARM" ;;
	esac
	mkdir -p $fs/usr/share/locale/$LOCALE
	for app in $CORE_PKGS; do
		app_locale="$WOK/$app/install/usr/share/locale/$LOCALE"
		if [ -d "$app_locale" ]; then
			echo "* Found $LOCALE translations for: $app"
			cp -a $app_locale $fs/usr/share/locale
		fi
	done

	# List of available locales
	cd $WOK/glibc/install/usr/share/i18n/locales
	locales=$(ls -1 | sed -n '/^'$LOCALE'$/p; /^'$LOCALE'_.*/p' | sed '/translit/d')
	[ -n "$LOCALEDEF" ] && locales="$LOCALEDEF"

	# Get X11 locale
	for def in $locales; do
		x11_locale="$WOK/xorg-libX11/install/usr/share/X11/locale/$def.$CHARMAP"
		case "$def.$CHARMAP" in
			en_US.UTF-8)
				# belongs to "xorg-libX11" package, skip it
				;;
			*)
				if [ -d "$x11_locale" ]; then
					echo "* Found $def.$CHARMAP locale for: X11"
					mkdir -p $fs/usr/share/X11/locale
					cp -a $x11_locale $fs/usr/share/X11/locale
				fi
				;;
		esac
	done

	# Get locale definition files
	usil='usr/share/i18n/locales'
	for def in $locales; do
		case $def in
			en_US|en_GB)
				# already in glibc-base
				;;
			*)
				echo "* Copying $def locale files"
				mkdir -p $fs/$usil
				cp -a $WOK/glibc/install/$usil/$def $fs/$usil
				;;
		esac
	done

	if [ -n "$LOCALE_DEPENDS" ]; then
		for dep in $LOCALE_DEPENDS; do
			echo "* Copying additional $dep locale files"
			cp -a $WOK/glibc/install/usr/share/i18n/locales/$dep \
			$fs/usr/share/i18n/locales
		done
	fi

	#grep -r 'include' $fs/usr/share/i18n/locales	# test includes in locales

	# Get timezones from tzdata
	countries=$(echo $locales | \
		sed 's|@[^ ]*||g; s|[^ _]*_||g' | tr ' ' '\n' | sort -u)
	echo "* Copy timezone info for countries: "$countries
	locations=''
	for country in $countries; do
		location=$(grep '^'$country \
			$WOK/tzdata/install/usr/share/zoneinfo/zone.tab | awk '{ print $3}')
		locations="$locations $location"
	done
	for location in $locations; do
		for tz in $location; do
			install -Dm644 $WOK/tzdata/install/usr/share/zoneinfo/$tz \
						$fs/usr/share/zoneinfo/$tz
		done
	done

	case "$SLITAZ_ARCH" in
		arm*) exit 0 ;;
	esac

	# Get country flags
	echo "* Copy flag icons for countries: "$countries
	usih='usr/share/icons/hicolor'
	for country in $countries; do
		for size in 16x16 48x48; do
			install -Dm644 \
				$WOK/flag-icons/taz/*/fs/$usih/$size/intl/$country.png \
				$fs/$usih/$size/intl/$country.png
		done
	done
	# above icons credits
	fusl="$fs/usr/share/licenses"
	mkdir -p $fusl
	cp -a $WOK/flag-icons/source/*/LICENSE.txt $fusl/gosquared.txt

	# Gconv modules for encodings other than default
	if [ -n "$GCONV" ]; then
		mkdir -p $fs/usr/lib/gconv
		for enc in $GCONV; do
			case $enc in
				ISO8859-1|ISO8859-15)
					# already in glibc-base
					;;
				*)
					echo "* Copying $enc gconv module"
					cp -a $WOK/glibc/install/usr/lib/gconv/$enc.so $fs/usr/lib/gconv
					;;
			esac
		done
		#ldd $fs/usr/lib/gconv/*	# test depends in gconv modules
	fi

	# Console keyboard layouts
	if [ -n "$KBD" ]; then
		uskki='usr/share/kbd/keymaps/i386'
		cd $WOK/kbd/install
		for map in $KBD; do
			echo "* Copying $map kbd map"
			mapfiles=$(find . -type f -name $map.map.gz)
			for mapfile in $mapfiles; do
				mkdir -p "$fs/$(dirname "${mapfile#./}")"
				cp "$WOK/kbd/install/${mapfile#./}" "$fs/${mapfile#./}"
			done
		done
	fi

	# Keyboard flags for default lxpanel keyboard applet
	if [ -n "$KB_FLAGS" ]; then
		uslix='usr/share/lxpanel/images/xkb-flags'
		mkdir -p $fs/$uslix
		for i in $KB_FLAGS; do
			install -Dm644 \
				$WOK/flag-icons/taz/*/fs/$usih/16x16/intl/${i%%:*}.png \
				$fs/$usih/16x16/intl/${i%%:*}.png
			ln -s ../../../icons/hicolor/16x16/intl/${i%%:*}.png $fs/$uslix/${i##*:}.png
		done
	fi

	# exit code OK
	echo
}
