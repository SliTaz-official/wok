# SliTaz package receipt.

PACKAGE="mingw32-gcc-c"
SOURCE="gcc-core"
VERSION="3.4.5-20060117-2"
CATEGORY="development"
SHORT_DESC="MinGW32 gcc, for the C language only."
MAINTAINER="rcx@zoominternet.net"
DEPENDS="glibc-base mingw32-binutils mingw32-w32api-headers mingw32-runtime-headers"
BUILD_DEPENDS="slitaz-toolchain bison flex mingw32-binutils mingw32-runtime-headers mingw32-w32api-headers"
TARBALL="$SOURCE-$VERSION-src.tar.gz"
WEB_SITE="http://www.mingw.org/"
MINGW32_URL="$SF_MIRROR/mingw"
WGET_URL="$MINGW32_URL/$TARBALL"
MINGW32_ID="i586-pc-mingw32"

# Configuration only needs included if we're in the build/wok environment
if [ -e $WOK/mingw32-toolcha$stuff/mingw32.conf ] ; then
	. $WOK/mingw32-toolcha$stuff/mingw32.conf
fi

# Rules to configure and make the package.
compile_rules()
{
	if [ "$MINGW32_ID" != "$MINGW32_TARGET" ] ; then
		echo "ERROR: Conf 'TARGET' string differs from Receipt 'ID' string"
		return 1
	fi

	rm -f -r $src/binutils
	mkdir -p $SOURCE-$VERSION-build
	cd $SOURCE-$VERSION-build
	$src/configure \
		--prefix=/usr \
		--libexecdir=/usr/lib \
		--infodir=/usr/share/info \
		--mandir=/usr/share/man \
		--with-sysroot=$MINGW32_ROOT \
		--disable-shared \
		--disable-debug \
		--target=$MINGW32_TARGET \
		--enable-languages=c \
		--enable-threads=win32 \
		--disable-win32-registry \
		--enable-sjlj-exceptions \
		$CONFIGURE_ARGS &&
	make CFLAGS="-O2 -fomit-frame-pointer" LDFLAGS="-s"  &&
	make DESTDIR=$src/_pkg install
}

# Rules to gen a SliTaz package suitable for Tazpkg.
genpkg_rules()
{
	mkdir -p $fs/usr
	cp -a $_pkg/usr/bin $fs/usr
	# do not need to copy lib/libiberty.a
	mkdir -p $fs/usr/lib
	cp -a $_pkg/usr/lib/gcc $fs/usr/lib
}

# Rules to setup after installation
post_install()
{
	# Archives get stripped during packaging; need to run ranlib
	local root
	root=$1
	find $root/usr/lib/gcc/$MINGW32_ID/ -name *.a -exec $MINGW32_ID-ranlib {} \;
}

# Rules to clean the package
clean_wok()
{
	rm -r $SOURCE-$VERSION-build
}
