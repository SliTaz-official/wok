--- busybox-1.25/init/halt.c
+++ busybox-1.25/init/halt.c
@@ -10,6 +10,7 @@
 //applet:IF_HALT(APPLET(halt, BB_DIR_SBIN, BB_SUID_DROP))
 //applet:IF_HALT(APPLET_ODDNAME(poweroff, halt, BB_DIR_SBIN, BB_SUID_DROP, poweroff))
 //applet:IF_HALT(APPLET_ODDNAME(reboot, halt, BB_DIR_SBIN, BB_SUID_DROP, reboot))
+//applet:IF_HALT(APPLET_ODDNAME(shutdown, halt, BB_DIR_SBIN, BB_SUID_DROP, shutdown))
 
 //kbuild:lib-$(CONFIG_HALT) += halt.o
 
@@ -65,6 +66,15 @@
 //usage:     "\n	-d SEC	Delay interval"
 //usage:     "\n	-n	Do not sync"
 //usage:     "\n	-f	Force (don't go through init)"
+//usage:
+//usage:#define shutdown_trivial_usage
+//usage:       "[-rhHP]"
+//usage:#define shutdown_full_usage "\n\n"
+//usage:       "Bring the system down\n"
+//usage:     "\n	-r	Do reboot"
+//usage:     "\n	-h	Do poweroff"
+//usage:     "\n	-H	Do halt"
+//usage:     "\n	-P	Do poweroff"
 
 #include "libbb.h"
 #include "reboot.h"
@@ -98,6 +108,7 @@
 int halt_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int halt_main(int argc UNUSED_PARAM, char **argv)
 {
+	enum { HALT=0, POWEROFF=1, REBOOT=2, SHUTDOWN=3 };
 	static const int magic[] = {
 		RB_HALT_SYSTEM,
 		RB_POWER_OFF,
@@ -109,9 +120,19 @@
 	int which, flags, rc;
 
 	/* Figure out which applet we're running */
-	for (which = 0; "hpr"[which] != applet_name[0]; which++)
+	for (which = 0; "hprs"[which] != applet_name[0]; which++)
 		continue;
 
+	if (which == SHUTDOWN) {
+		which = REBOOT;
+		switch (getopt32(argv, "rhPH")) {
+			case 2:
+			case 4: which = POWEROFF; break;
+			case 8: which = HALT;
+		}
+		flags = 0;
+	}
+	else {
 	/* Parse and handle arguments */
 	opt_complementary = "d+"; /* -d N */
 	/* We support -w even if !ENABLE_FEATURE_WTMP,
@@ -119,6 +140,7 @@
 	 * -i (shut down network interfaces) is ignored.
 	 */
 	flags = getopt32(argv, "d:nfwi", &delay);
+	}
 
 	sleep(delay);
 
