#!/bin/sh

# udhcpc script edited by Tim Riker <Tim@Rikers.org>

[ -z "$1" ] && echo "Error: should be called from udhcpc" && exit 1

[ "$subnet" == "255.255.255.255" ] && subnet="255.255.0.0" # qemu/ipv6 weirdness
RESOLV_CONF="/etc/resolv.conf"
[ -n "$broadcast" ] && BROADCAST="broadcast $broadcast"
[ -n "$subnet" ] && NETMASK="netmask $subnet"

netfs()
{
	grep -qe '\(:.* /\|httpfs\|nfs\|smbfs\|ncp\|coda\)' /proc/mounts
}

logger "$0 interface=$interface ip=$ip ipv6=$ipv6 broadcast=$broadcast subnet=$subnet ipv6prefix=$ipv6prefix router=$router domain=$domain dns=$dns fqdn=$fqdn $@"

skip=$(sed "/skipdhcpip=/!d;s/.*skipdhcpip=\([^ ]*\).*/\1/" </proc/cmdline)
[ -n "$skip" ] && case "$ip" in $skip*) exit 0;; esac

case "$1" in
	deconfig)
		if !netfs; then
			ifconfig $interface 0.0.0.0
			ip -6 addr flush dev $interface
		fi
		for i in /etc/ipdown.d/*; do
			[ -x $i ] && $i $interface
		done
		;;

	renew|bound)
		if [ ${ip/:/} == $ip ];	then
			ifconfig $interface $ip $BROADCAST $NETMASK
		else
			ip -6 addr add ${ip}/${ipv6prefix#*/} dev $interface
		fi

		if [ -n "$router" ] ; then
			echo "deleting routers"
			while route del default gw 0.0.0.0 dev $interface 2>/dev/null; do
				:
			done
			[ ${ip/:/} != $ip ] && ip -6 route flush dev $interface

			metric=0
			for i in $router ; do
				if [ ${ip/:/} == $ip ]; then
					route add default gw $i dev $interface metric $((metric++))
				else
					route -A inet6 add default gw $i dev $interface metric $((metric++))
				fi
			done 2>/dev/null
		fi

		echo -n > $RESOLV_CONF
		[ -n "$domain" ] && echo search $domain >> $RESOLV_CONF
		for i in $dns ; do
			echo adding dns $i
			echo nameserver $i >> $RESOLV_CONF
		done
		[ "$1" == "bound" ] && for i in /etc/ipup.d/*; do
			[ -x $i ] && $i $interface $ip $dns
		done
		;;
esac

exit 0
