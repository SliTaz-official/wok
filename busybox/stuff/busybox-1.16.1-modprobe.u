--- busybox-1.16.1/include/usage.h
+++ busybox-1.16.1/include/usage.h
@@ -2898,7 +2898,7 @@
 #define modprobe_trivial_usage \
 	IF_MODPROBE_SMALL("[-qfwrsv] MODULE [symbol=value]...") \
 	IF_NOT_MODPROBE_SMALL("[-" \
-		IF_FEATURE_2_4_MODULES("k")"nqrsv" \
+		IF_FEATURE_2_4_MODULES("k")"nlqrsv" \
 		IF_FEATURE_MODPROBE_BLACKLIST("b")"] MODULE [symbol=value]...")
 #define modprobe_full_usage "\n\n" \
        "Options:" \
@@ -2915,6 +2915,7 @@
      "\n	-k	Make module autoclean-able" \
 	) \
      "\n	-n	Dry run" \
+     "\n	-l	List" \
      "\n	-q	Quiet" \
      "\n	-r	Remove module (stacks) or do autoclean" \
      "\n	-s	Report via syslog instead of stderr" \

--- busybox-1.16.1/modutils/modprobe.c
+++ busybox-1.16.1/modutils/modprobe.c
@@ -367,11 +367,10 @@
 	opt = getopt32(argv, INSMOD_OPTS MODPROBE_OPTS INSMOD_ARGS, NULL, NULL);
 	argv += optind;
 
-	if (opt & (MODPROBE_OPT_DUMP_ONLY | MODPROBE_OPT_LIST_ONLY |
-				MODPROBE_OPT_SHOW_ONLY))
+	if (opt & (MODPROBE_OPT_DUMP_ONLY | MODPROBE_OPT_SHOW_ONLY))
 		bb_error_msg_and_die("not supported");
 
-	if (!argv[0]) {
+	if (!argv[0] && !(opt & MODPROBE_OPT_LIST_ONLY)) {
 		if (opt & MODPROBE_OPT_REMOVE) {
 			/* "modprobe -r" (w/o params).
 			 * "If name is NULL, all unused modules marked
@@ -403,6 +402,27 @@
 			DBG("adding module %s", *argv);
 			add_probe(*argv++);
 		} while (*argv);
+	} else if (opt & MODPROBE_OPT_LIST_ONLY) {
+		char *colon, name[MODULE_NAME_LEN], *tokens[2];
+		parser_t *p = config_open2(CONFIG_DEFAULT_DEPMOD_FILE, xfopen_for_read);
+		
+		while (config_read(p, tokens, 2, 1, "# \t", PARSE_NORMAL)) {
+			int i;
+
+			colon = last_char_is(tokens[0], ':');
+			if (colon == NULL)
+				continue;
+			*colon = 0;
+			filename2modname(tokens[0], name);
+			if (!argv[0]) 
+				puts(tokens[0]);
+			else for (i = 0; argv[i]; i++) {
+				if (fnmatch(argv[i],name,0) == 0) {
+					puts(tokens[0]);
+				}
+			}
+		}
+		return EXIT_SUCCESS;
 	} else {
 		/* First argument is module name, rest are parameters */
 		DBG("probing just module %s", *argv);
