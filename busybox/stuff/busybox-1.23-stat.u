Add non standard stat -m support to display file block list
Useful to patch read-only filesystems such as ISO9660, for defragmentation
tools or boot loaders
--- busybox-1.23.0/coreutils/stat.c
+++ busybox-1.23.0/coreutils/stat.c
@@ -23,6 +23,7 @@
 //usage:     "\n	-f	Display filesystem status"
 //usage:     "\n	-L	Follow links"
 //usage:     "\n	-t	Display info in terse form"
+//usage:     "\n	-m	Display block list"
 //usage:	IF_SELINUX(
 //usage:     "\n	-Z	Print security context"
 //usage:	)
@@ -73,11 +74,13 @@
 //usage:	)
 
 #include "libbb.h"
+#include <linux/fs.h>
 
 #define OPT_FILESYS     (1 << 0)
 #define OPT_TERSE       (1 << 1)
 #define OPT_DEREFERENCE (1 << 2)
-#define OPT_SELINUX     (1 << 3)
+#define OPT_MAP         (1 << 3)
+#define OPT_SELINUX     (1 << 4)
 
 #if ENABLE_FEATURE_STAT_FORMAT
 typedef bool (*statfunc_ptr)(const char *, const char *);
@@ -425,6 +428,26 @@
 
 /* Stat the file system and print what we find.  */
 #if !ENABLE_FEATURE_STAT_FORMAT
+#define do_mapfile(filename, format) do_mapfile(filename)
+#endif
+static bool do_mapfile(const char *filename, const char *format)
+{
+	int i = 0;
+	int fd = xopen(filename, O_RDONLY);
+
+#if ENABLE_FEATURE_STAT_FORMAT
+	(void) format;
+#endif
+	while (1) {
+		int blk = i++;
+		if (ioctl(fd,FIBMAP,&blk) < 0 || blk == 0) break;
+		printf("%u\n",blk);
+	}	
+	return 1;
+}
+
+/* Stat the file system and print what we find.  */
+#if !ENABLE_FEATURE_STAT_FORMAT
 #define do_statfs(filename, format) do_statfs(filename)
 #endif
 static bool do_statfs(const char *filename, const char *format)
@@ -721,7 +744,7 @@
 	statfunc_ptr statfunc = do_stat;
 
 	opt_complementary = "-1"; /* min one arg */
-	opts = getopt32(argv, "ftL"
+	opts = getopt32(argv, "ftLm"
 		IF_SELINUX("Z")
 		IF_FEATURE_STAT_FORMAT("c:", &format)
 	);
@@ -732,6 +755,9 @@
 		selinux_or_die();
 	}
 #endif
+ 	if (opts & OPT_MAP) { /* -m */
+ 		statfunc = do_mapfile;
+	}
 	ok = 1;
 	argv += optind;
 	for (i = 0; argv[i]; ++i)
