Add LZMA_DEFAULT_MAGIC support
--- busybox-1.20/archival/libarchive/open_transformer.c
+++ busybox-1.20/archival/libarchive/open_transformer.c
@@ -132,6 +132,21 @@
 	/* .gz and .bz2 both have 2-byte signature, and their
 	 * unpack_XXX_stream wants this header skipped. */
 	xread(fd, magic.b16, sizeof(magic.b16[0]));
+#if 1
+// SliTaz uses .gz suffix for lzma'd kernel modules
+#if BB_BIG_ENDIAN
+#define LZMA_DEFAULT_MAGIC 0x5d00
+#else
+#define LZMA_DEFAULT_MAGIC 0x5d
+#endif
+	if (ENABLE_FEATURE_SEAMLESS_LZMA
+	 && magic.b16[0] == LZMA_DEFAULT_MAGIC
+	) {
+		xlseek(fd, offset, SEEK_CUR);
+		open_transformer_with_sig(fd, unpack_lzma_stream, "unlzma");
+		return 0;
+	}
+#endif
 	if (ENABLE_FEATURE_SEAMLESS_GZ
 	 && magic.b16[0] == GZIP_MAGIC
 	) {

--- busybox-1.22.0/archival/libarchive/open_transformer.c
+++ busybox-1.22.0/archival/libarchive/open_transformer.c
@@ -205,15 +205,15 @@
 		return fd;
 
 	sfx = strrchr(fname, '.');
-	if (sfx) {
-		sfx++;
-		if (ENABLE_FEATURE_SEAMLESS_LZMA && strcmp(sfx, "lzma") == 0)
-			/* .lzma has no header/signature, just trust it */
-			open_transformer_with_sig(fd, unpack_lzma_stream, "unlzma");
-		else
-		if ((ENABLE_FEATURE_SEAMLESS_GZ && strcmp(sfx, "gz") == 0)
-		 || (ENABLE_FEATURE_SEAMLESS_BZ2 && strcmp(sfx, "bz2") == 0)
-		 || (ENABLE_FEATURE_SEAMLESS_XZ && strcmp(sfx, "xz") == 0)
+	if (sfx++ && ENABLE_FEATURE_SEAMLESS_LZMA && strcmp(sfx, "lzma") == 0) {
+		/* .lzma has no header/signature, just trust it */
+		open_transformer_with_sig(fd, unpack_lzma_stream, "unlzma");
+	}
+	else {
+		if ((ENABLE_FEATURE_SEAMLESS_GZ)
+		 || (ENABLE_FEATURE_SEAMLESS_BZ2)
+		 || (ENABLE_FEATURE_SEAMLESS_LZMA)
+		 || (ENABLE_FEATURE_SEAMLESS_XZ)
 		) {
 			setup_unzip_on_fd(fd, /*fail_if_not_detected:*/ 1);
 		}

