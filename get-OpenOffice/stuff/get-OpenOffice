#!/bin/sh
# get-OpenOffice, install everything for OpenOffice except KDE and Gnome integration and testsuite.
#
# (C) 2022 SliTaz - GNU General Public License v3.
#
# Author : HGT
#

#	=== Initialisations ===

PKGS_DB="/var/lib/tazpkg"	# packages database directory
PACKAGE="OpenOffice"
CATEGORY="office"
SHORT_DESC="Productivity suite."
MAINTAINER="nobody@slitaz.org"
LICENSE="Apache"
WEB_SITE="https://www.openoffice.org"

EXCLUDE="kde|gnome|test|onlineupdate"

# Declare functions check_root, status, ...
. /lib/libtaz.sh
# and make commandline options (if any) available as variables

is_installed()
{
	if [ -d $ROOT$PKGS_DB/installed/$PACKAGE ]
	  then	#package is deemed to be installed
	 	return 0
	  else
	 	return 1
	 fi
}

# Show commandline options, if requested by --help
if [ "$help" == "yes" ]
  then
	echo "Commandline options:
  $0
	--version=<version>
	--lang=<language>
	--root=<path-to-root>
	--install=yes|no
	--keep=no|yes
	--tmpdir=<directory-to-build-package>
	--logfile=<logging-file>"
	exit
fi

# Check for system administrator privileges
check_root

title "Package $PACKAGE will be build as SliTaz package and installed"

# Fetch latest version
# unless version is set by option --version
[ -z "$version" ] && version="latest"

# Fetch RPM package for english language
# unless language is set by option --lang
[ -z "$lang" ] && lang="en-GB"

# Install SliTaz package
# unless inhibited by option --install=no
[ -z "$install" ] && install="yes"

# Delete SliTaz package file $PACKAGE-$VERSION.tazpkg after installation
# unless option --keep=yes is given
[ -z "$keep" ] && keep="no"

# Directory for temporary files
TMP_DIR="$tmpdir"
[ -z "$tmpdir" ] && TMP_DIR="/tmp/get-$PACKAGE"

# Logging file
LOG="$logfile"
[ -z "$logfile" ] && LOG=$TMP_DIR/get-$PACKAGE.log

cat <<EOT
Options in use:
  root           : $root/
  version        : $version
  lang		 : $lang
  install package: $install
  keep tazpkg    : $keep
  build directory: $TMP_DIR
  logging file   : $LOG

EOT

separator; newline

# Set VERSION, unless supplied by --version
if [ "$version" == "latest" ]
  then
	echo "Selecting latest version from $WEB_SITE ..."
	VERSION=$(wget -O - $WEB_SITE 2>/dev/null | sed '/Released: Apache OpenOffice /!d;s|.* OpenOffice ||;s|</a></div>||')
  else
	VERSION=$version
fi

MV=${VERSION%%.*}	# main version

TARBALL=Apache_OpenOffice_${VERSION}_Linux_x86_install-rpm_${lang}.tar.gz
echo "Archive is $TARBALL ..."
WGET_URL=https://archive.apache.org/dist/openoffice/$VERSION/binaries/$lang/$TARBALL

#	=== Remove package, if installed ===
if is_installed
  then
	echo "$PACKAGE is already installed."
	echo -n "Would you like to remove and reinstall this package [y/n]? "
	read answer
	case "$answer" in
		(y|Y)
			action "Removing installed version..."
			newline
			tazpkg remove $PACKAGE --root="$root/"
			[ ! is_installed ] &&
			die "Can't remove installed version. Exiting."
			;;
		(*)
			echo "Leaving $PACKAGE untouched."
			exit 0
			;;
	esac
fi

#	=== Fetch archive file, if not existing ===

CUR_DIR=$(pwd)
mkdir -p $TMP_DIR
cd $TMP_DIR
if [ -f $TARBALL ]
  then
	echo "Using existing archive file $TARBALL"
  else
	action "Fetching the archive"
	newline
	wget	--no-check-certificate $WGET_URL
	if [ ! -f $TARBALL ]
	  then
		cd $CUR_DIR
		rm -rf $TMP_DIR
		echo "Could not transfer $TARBALL from $WGET_URL. Exiting."
		exit 1
	fi
fi

#	=== Extract files from archive ===
action "Extracting the archive"
newline

tar x -vf $TARBALL > $LOG 2>&1 || \
 (echo "Failed to extract $TARBALL" ; exit 1)

status

# Remove archive file
rm -f $TARBALL

# Extract everything from rpm files and remove them
cd $TMP_DIR/*/RPMS
for i in *.rpm
  do
	if (! echo $i | egrep -qi $EXCLUDE)
	  then
		(rpm2cpio $i | cpio -id >> $LOG 2>&1 ) &&
		rm -f $i
	fi
  done

# Extracted from freedesktop rpm and remove it
rpm2cpio	desktop-integration/*freedesktop*.rpm | cpio -id >> $LOG 2>&1
rm -f		desktop-integration/*freedesktop*.rpm

# Prepare the package tree
mkdir -p $PACKAGE-$VERSION/fs/usr/lib/openoffice
mkdir -p $PACKAGE-$VERSION/fs/usr/share

mv opt/openoffice*	$PACKAGE-$VERSION/fs/usr/lib/openoffice
mv usr/share/mime	$PACKAGE-$VERSION/fs/usr/share
mv usr/share/icons	$PACKAGE-$VERSION/fs/usr/share
mv usr/bin		$PACKAGE-$VERSION/fs/usr

# relocalised OOo libexec directory
sed -i 's|/opt/|/usr/lib/openoffice/|' \
	$PACKAGE-$VERSION/fs/usr/bin/openoffice*

# Create recipe for tazpkg
cat > $PACKAGE-$VERSION/receipt <<EOT
# SliTaz package receipt.

PACKAGE="$PACKAGE"
VERSION="$VERSION"
CATEGORY="$CATEGORY"
SHORT_DESC="$SHORT_DESC"
MAINTAINER="$MAINTAINER"
LICENSE="$LICENSE"
WEB_SITE="$WEB_SITE"

post_install()
{
	cd \$1/usr/share/applications
	ln -s /usr/lib/openoffice/openoffice$MV/share/xdg/base.desktop		openoffice$MV-base.desktop 
	ln -s /usr/lib/openoffice/openoffice$MV/share/xdg/impress.desktop	openoffice$MV-impress.desktop
	ln -s /usr/lib/openoffice/openoffice$MV/share/xdg/writer.desktop	openoffice$MV-writer.desktop
	ln -s /usr/lib/openoffice/openoffice$MV/share/xdg/calc.desktop		openoffice$MV-calc.desktop
	ln -s /usr/lib/openoffice/openoffice$MV/share/xdg/math.desktop		openoffice$MV-math.desktop
	ln -s /usr/lib/openoffice/openoffice$MV/share/xdg/draw.desktop		openoffice$MV-draw.desktop
	ln -s /usr/lib/openoffice/openoffice$MV/share/xdg/printeradmin.desktop	openoffice$MV-printeradmin.desktop

	cd \$1/usr/bin
	ln -sf /usr/lib/openoffice/openoffice$MV/program/soffice
}

post_remove()
{
	rm -f \$1/usr/share/applications/openoffice$MV-*
}

EOT

# Pack
tazpkg pack $PACKAGE-$VERSION
# Remove package tree
rm -rf $PACKAGE-$VERSION

#	=== Install the SliTaz package ===
[ "$install" == "yes" ] &&
tazpkg install $PACKAGE-$VERSION.tazpkg --root="$root"

#	=== Cleanup ===
# Preserve package file, if requested
[ "$keep" == "yes" ] &&
( mv $PACKAGE-$VERSION.tazpkg $CUR_DIR &&
  echo Saved $PACKAGE-$VERSION.tazpkg to $CUR_DIR )

# Remove temporary build directory
cd $CUR_DIR
rm -rf $TMP_DIR
