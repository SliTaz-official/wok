# SliTaz package receipt.

PACKAGE="bash"
VERSION="4.1"
CATEGORY="system-tools"
SHORT_DESC="The GNU bourne SHell."
MAINTAINER="pankso@slitaz.org"
DEPENDS="readline"
BUILD_DEPENDS="readline bison"
TARBALL="$PACKAGE-$VERSION.tar.gz"
WEB_SITE="http://www.gnu.org/software/bash/"
WGET_URL="$GNU_MIRROR/$PACKAGE/$TARBALL"

# Rules to compile & install the temporary toolchain.
cook_tmp_toolchain()
{
	# Patch and then build.
	cd $src
	patch -Np1 -i ../stuff/bash-4.1-fixes-3.patch
	./configure --without-bash-malloc &&
	make && make install
}

# Rules to configure and make the package.
compile_rules()
{
	# Patch and then build.
	cd $src
	patch -Np1 -i ../stuff/bash-4.1-fixes-3.patch
	./configure --bindir=/bin \
		--enable-history --enable-alias  \
		--disable-nls --without-bash-malloc \
		--disable-help-builtin --with-installed-readline &&
	make &&
	# Bash doesn't care about DESTDIR in environnment variable.
	make DESTDIR=$DESTDIR install
}

# Rules to gen a SliTaz package suitable for Tazpkg.
genpkg_rules()
{
	cp -a $_pkg/bin $fs
	strip -s $fs/bin/bash
	# Config files.
	#
	mkdir $fs/etc
	cp stuff/example.bashrc $fs/etc/bashrc
}

# Post install commands for Tazpkg.
# Check /bin/sh stat.
#
post_install()
{
	local root
	root=$1
	echo "Processing post-install commands..."
	sh=`readlink $root/bin/sh`
	if [ ! "$sh" = "/bin/bash" ]; then
		echo ""
		echo "**** Actual SH link : $sh"
		echo ""
		echo -n "Do you want Bash for /bin/sh (yes/No) ? : "
		read -t 30 anser
		if [ "$anser" == "yes" ]; then
			echo ""
			echo -n "Removing sh link to make a new one pointing on /bin/bash..."
			rm $root/bin/sh && ln -s /bin/bash $root/bin/sh
			status
		else
			echo ""
			echo "Leaving /bin/sh to : $sh"
		fi
	fi
}

# Restore a valid sh link if needed.
pre_remove()
{
	sh=`readlink /bin/sh`
	if [ ! "$sh" = "busybox" ]; then
		rm /bin/sh &&
		ln -s /bin/busybox /bin/sh
	fi
}
