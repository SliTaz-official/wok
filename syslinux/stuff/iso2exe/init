#!/bin/sh

getarg()
{
	sed "/$1=/!d;s/.*$1=\\([^ ]*\\).*/\\1/" /proc/cmdline
}

media=/media/cdrom
mnt=/mnt
getiso()
{
	mkdir -p $media
	for bdev in /sys/block/*; do
		for dev in $(ls -d $bdev/$(basename $bdev)*); do
			[ "$dev" ] || continue 2
			mount /dev/$(basename $dev) $mnt
			if [ -s $mnt/$ISO ] && [ $(getarg magic) = $(hexdump -v -s  18 -n 2 -e "\"\" 1/2 \" %u\n\"" $mnt/$ISO) ]; then
				echo "Found $ISO on $(basename $dev)"
				ISO=$mnt/$ISO
				mount -o loop,ro $ISO $media
				return
			fi
			umount $mnt
		done
	done
	text
}

uncpio=uncpio64
uncpio64()
{
	i=$1
	grep ' lm ' /proc/cpuinfo && [ -s ${i}64 ] && i=${i}64
	[ -s "$i" ] || return
	echo -en "\n Extracting $(basename $i) ..."
	case $(get 0 $i) in
	*35615)	( zcat || gunzip );;
	*14333) unxz;;
	*\ 93)	unlzma;;
	*)	cat;;
	esac < $i | ( cd ${2:-/}; cpio -idmu > /dev/null 2>&1 )
}

tty0=tty0
bootlog()
{
	dialog --clear --title " Linux boot messages " --textbox /tmp/dmesg 24 78
}

gotposixovl()
{
	mount.posixovl 2>&1 | grep -qi usage &&
	echo -en "\"$1\"	\"$2\""
}

dosync()
{
	sync
	if [ -s /lib/modules/squashfs.ko* ]; then
		rm /var /usr
		umount -d /sqfs
		rmdir /sqfs 2>/dev/null || rm -f /sqfs
		rm -rf /etc
	fi
	umount -d $media
	rm -f /dev/cdrom
	umount $mnt
	killall udevd 2>/dev/null
	umount /sys/fs/fuse/connections 2>/dev/null
	umount /sys
	umount /proc
}

xhascustomconf=false
text()
{
	[ -d /etc/skel ] || $uncpio $(ls -r $media/boot/rootfs?*.* | sed q)
	init=
	cmdline="$(cat /proc/cmdline)"
	if $xhascustomconf 2> /dev/null; then
		getcustomconf /tmp > /dev/null
		[ -s /tmp/cmdline ] &&
			cmdline="$cmdline $(cat /tmp/cmdline)" &&
			init="$(sed '/rdinit=/!d;s/.*rdinit=\([^ ]*\).*/\1/' /tmp/cmdline)"
		[ -s /tmp/initrd ] && $uncpio /tmp/initrd
	fi
	dosync
	sed 's/ || exit//' -i /init
	exec ${init:-/init} $cmdline
}

xdowait=echo
live()
{
	n=0
	$xdotwait "Extract filesystem..."
	for i in $(ls -r $media/boot/rootfs?*.*); do
		[ $((n++)) -eq 0 ] || $uncpio $i
	done
	rm -f /tmp/wait
	text
}

restart()
{
	dosync
	reboot -f
}

stop()
{
	dosync
	poweroff -f
}

dokexec()
{
	kexec -l $file || return
	dosync
	kexec -e
}

shell()
{
	trap text 2
	getty -n -l /bin/ash 38400 tty1 2>/dev/null || sh
}

BIN=bin/mount.posixovl
[ -x /usr/s$BIN ] || mv /$BIN.iso2exe /usr/s$BIN 2>/dev/null || mv /$BIN.iso2exe /$BIN 2>/dev/null
mount -t proc /proc /proc
mount -t sysfs /sys /sys
udevd --daemon 2>/dev/null && udevadm trigger && sleep 5
mdev -s 2> /dev/null ||
for i in /sys/block/*/dev /sys/block/*/*/dev; do
	[ -s "$i" ] || continue
	n=${i%/dev}
	n=/dev/${n##*/}
	[ -e $n ] && continue
	mknod $n b $(sed 's/:/ /' < $i)
done 2>/dev/null
ISO="$(getarg iso | sed 's/.://;s|\\|/|g')"
getiso 2>/dev/null || text
if [ -s /lib/modules/squashfs.ko* ]; then
	insmod /lib/modules/squashfs.ko* 2>/dev/null
	if [ -d $media/fs ]; then
		ln -s $media/fs /sqfs
	else
		mkdir /sqfs
		losetup -o 124 /dev/loop6 $(ls -r $media/boot/rootfs?*.* | sed q)
		mount -r /dev/loop6 /sqfs
	fi
	cp -a /sqfs/dev/fuse /sqfs/dev/tty[12] /dev
	for i in /sqfs/dev/* ; do [ -b $i ] && cp -a $i /dev ; done
	ln -s /sqfs/lib/* lib 2>/dev/null
	ln -fs /sqfs/usr /sqfs/var /
	mkdir /etc && cp /sqfs/etc/dialogrc /etc 2>/dev/null
fi
[ -s /usr/bin/taziso ] || live
. /usr/bin/taziso
