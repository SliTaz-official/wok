#!/bin/sh 

# Get and install Dropbox for Linux

PACKAGE="dropbox"
WEB_SITE="http://www.dropbox.com"
PLATFORM="lnx.x86"	# or lnx.x86_64
TARBALL=$PACKAGE-$PLATFORM.tar.gz
URL="$WEB_SITE/download/?plat=$PLATFORM"
CUR_DIR=$(pwd)
TEMP_DIR=/tmp/$PACKAGE-$PLATFORM-$$
ROOT="$1"

# Check if we are root
if test $(id -u) != 0 ; then
	echo -e "\nYou must be root to run `basename $0`."
	echo -e "Please type 'su' and root password to become super-user.\n"
	exit 1
fi

# Avoid reinstall
if [ -d $ROOT/var/lib/tazpkg/installed/$PACKAGE ]; then
	echo -e "\n$PACKAGE package is already installed.\n"
	exit 1
fi

# Create a TEMP_DIR
mkdir $TEMP_DIR
cd $TEMP_DIR

# Download the file
wget --no-check-certificate -O $TARBALL $URL 

if [ ! -f $TARBALL ]; then
	echo "Could not download $TARBALL. Exiting."
	cd $CUR_DIR
	rm -rf $TEMP_DIR
	exit 1
fi

tar xzf $TARBALL
# extracted pkg can be removed: Save RAM
rm -f $TARBALL
VERSION="$(cat $TEMP_DIR/.dropbox-dist/VERSION)"

mkdir -p $PACKAGE-$VERSION/fs/usr/lib \
	$PACKAGE-$VERSION/fs/usr/bin \
	$PACKAGE-$VERSION/fs/usr/share/applications 

mv $TEMP_DIR/.dropbox-dist $PACKAGE-$VERSION/fs/usr/lib/dropbox
strip $PACKAGE-$VERSION/fs/usr/lib/dropbox 2>/dev/null

# Custom Dropboxd
cat > $PACKAGE-$VERSION/fs/usr/lib/dropbox/dropboxd << "EOT"
#!/bin/sh
PAR=/usr/lib/dropbox
LD_LIBRARY_PATH=$PAR:$LD_LIBRARY_PATH exec $PAR/dropbox $@
EOT

# Desktop file
cat > $PACKAGE-$VERSION/fs/usr/share/applications/dropbox.desktop << EOT
[Desktop Entry]
Type=Application
Name=Dropbox Storage
Exec=dropboxd
Icon=dropbox
Terminal=false
Categories=Network
EOT

# Symlink to have Dropbox in PATH and fake nautilus
cd $PACKAGE-$VERSION/fs/usr/bin
rm -f dropboxd nautilus
ln -s ../lib/dropbox/dropboxd .
ln -s /usr/bin/pcmanfm nautilus

cd $TEMP_DIR

cat > $PACKAGE-$VERSION/receipt << EOT
PACKAGE="$PACKAGE"
VERSION="$VERSION"
CATEGORY="non-free"
SHORT_DESC="Dropbox daemon and client for online storage."
DEPENDS="python"
WEB_SITE="$WEB_SITE/"
SUGGESTED="ntlmaps"
EOT

# Pack
tazpkg pack $PACKAGE-$VERSION

# Clean to save RAM memory
rm -rf $PACKAGE-$VERSION

# Install pseudo package
yes y | tazpkg install $PACKAGE-$VERSION.tazpkg --root=$ROOT

case " $@ " in
*\ --k*) mv $PACKAGE-$VERSION.tazpkg $CUR_DIR ;;
esac

# Clean
cd $CUR_DIR
rm -rf $TEMP_DIR
