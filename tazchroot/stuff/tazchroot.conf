# Tazchroot configuration file
# Allow you to build a chrooted cooking environnment using the last
# version available of packages.

# Use SliTaz version:
SLITAZ_VERSION=cooking

# Chroot path:
chroot_dir=/home/cooking

# SLITAZ_DIR (it's mounted on chroot)
SLITAZ_DIR=/home/slitaz

# Online repository path:
MIRROR=http://mirror.slitaz.org/packages/experimental/

# Default SliTaz paths.
LOCALSTATE=/var/lib/tazpkg
INSTALLED=$LOCALSTATE/installed

# Webserver path;
# Define where the chrooted webserver should be linker into
# the host system; In this case use the default path when
# setting up chrooted webserver.
# The host system needs php installed to make it works.
# Uncomment to following line to use this option.
#WEBSERVER="/var/www/vhosts/bb"

# Default scripts path (theses scripts are added in the
# $chroot_dir/usr/bin and can be called with tazchroot script)
script_dir="/usr/lib/slitaz/chroot-scripts/tazchroot"

# List of directories to mount.
# They are mounted to an equivalent location into chroot.
# (one per line)
list_dir="$SLITAZ_DIR"

create_chroot()
{
	# Warning message.
	echo -en "\\033[1;31mWarning:\\033[0m this script is going to use another packages repository than \
the one you generally use. Please don't install packages until chroot is created or it will \
screw you're main system.
Don't continue to run this script if you're installing something.

Continue to run (type 'yes' to continue) ? " | fold; read answer
	[ "$answer" = yes ] || exit

	if [ -f "$LOCALSTATE/priotity" ]; then
		mv $LOCALSTATE/priotity $LOCALSTATE/priority.tmp-bak
	fi
	tazpkg add-undigest tmp.$SLITAZ_VERSION.mirror "$MIRROR"
	echo "tmp.$SLITAZ_VERSION.mirror" > /var/lib/tazpkg/priority
	tazpkg recharge

	# Install needed packages.
	tazpkg get-install busybox --root="$chroot_dir"
	tazpkg get-install tazchroot --root="$chroot_dir"
	tazpkg get-install tazpkg --root="$chroot_dir"
	tazpkg get-install tazwok-experimental --root="$chroot_dir"
	tazpkg get-install libtaz --root="$chroot_dir"

	rm -r $LOCALSTATE/undigest/tmp.$SLITAZ_VERSION.mirror
	if [ -f "$LOCALSTATE/priotity.tmp-bak" ]; then
		mv -f $LOCALSTATE/priotity.tmp-bak $LOCALSTATE/priority
	fi
	tazpkg recharge

	echo -e "\\033[1;31mWarning:\\033[0m You're SliTaz repository configuration is now \
back to normal state." | fold
}

mount_chroot()
{
	# resolv.conf is needed to have network access into chroot.
	cp -a /etc/resolv.conf "$chroot_dir/etc/resolv.conf"

	# Setup mirror for chroot.
	echo "$MIRROR" > "$chroot_dir/var/lib/tazpkg/mirror"

	# Setup release.
	echo "$SLITAZ_VERSION" > "$chroot_dir/etc/slitaz-release"

	# Webserver setup.
	if [ "$WEBSERVER" ]; then
		if [ -e "$WEBSERVER" ]; then
			if [ -L "$WEBSERVER" ]; then
				[ "$(readlink $WEBSERVER)" = "$chroot_dir/var/www/vhosts/bb" ] || {
					rm "$WEBSERVER"
					ln -s "$chroot_dir/var/www/vhosts/bb" "$WEBSERVER"
				}
			else
				echo  "\\033[1;31mWarning:\\033[0m Something at $WEBSERVER prevent to setup the webserver link correctly."
			fi
		else
			ln -s "$chroot_dir/var/www/vhosts/bb" "$WEBSERVER"
		fi
	fi

	# Mount system directories
	mount -t proc proc $chroot_dir/proc
	mount -t sysfs sysfs $chroot_dir/sys
	mount -t devpts devpts $chroot_dir/dev/pts
	mount -t tmpfs shm $chroot_dir/dev/shm

	# Mount directories of LIST_DIR.
	# Create them if needed to avoid errors.
	for dir in $list_dir; do
		mkdir -p $dir
		mkdir -p $chroot_dir$dir
		mount $dir $chroot_dir$dir
	done
}

umount_chroot()
{
	# First umount directories of LIST_DIR.
	for dir in $list_dir; do
		umount $chroot_dir$dir
	done

	# Then umount system directories.
	umount $chroot_dir/dev/shm
	umount $chroot_dir/dev/pts
	umount $chroot_dir/sys
	umount $chroot_dir/proc
}
