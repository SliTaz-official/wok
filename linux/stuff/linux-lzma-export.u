--- linux-2.6.24.2/lib/decompress_unlzma.c
+++ linux-2.6.24.2/lib/decompress_unlzma.c
@@ -321,7 +321,7 @@ typedef struct {
 #define LZMA_LITERAL (LZMA_REP_LEN_CODER + LZMA_NUM_LEN_PROBS)
 
 
-STATIC int unlzma(char *inbuf, int in_len, 
+int unlzma(char *inbuf, int in_len, 
 		   int(*fill)(void*,unsigned int),
 		   int(*writebb)(char*,unsigned int),
 		   int *posp)
@@ -348,10 +348,21 @@ STATIC int unlzma(char *inbuf, int in_le
 
 	rc_init(&rc, fill, inbuf, in_len);
 
-	for (i = 0; i < sizeof(header); i++) {
-		if (rc.ptr >= rc.buffer_end)
-			rc_read(&rc);
-		((unsigned char *)&header)[i] = *rc.ptr++;
+	header.dict_size = header.dst_size = in_len;
+	if (inbuf && inbuf[0] == 0) {
+		const LZMA_LC = 3, LZMA_LP = 0, LZMA_PB = 2;
+		header.pos = (LZMA_PB * 45) + (LZMA_LP * 5) + LZMA_LC;
+		rc.ptr++;
+	}
+	else {
+		int hdrsize = sizeof(header);
+		if (inbuf && (1 + * (unsigned long *) &inbuf[9]) > 1U)
+			hdrsize = 5;
+		for (i = 0; i < hdrsize; i++) {
+			if (rc.ptr >= rc.buffer_end)
+				rc_read(&rc);
+			((unsigned char *)&header)[i] = *rc.ptr++;
+		}
 	}
 
 	if (header.pos >= (9 * 5 * 5))

--- linux-2.6.24.2/lib/Makefile	
+++ linux-2.6.24.2/lib/Makefile	
@@ -51,7 +51,7 @@ obj-$(CONFIG_LIBCRC32C)	+= libcrc32c.o
 obj-$(CONFIG_GENERIC_ALLOCATOR) += genalloc.o
 
 obj-$(CONFIG_RD_BZIP2)	+= decompress_bunzip2.o
-obj-$(CONFIG_RD_LZMA)	+= decompress_unlzma.o
+obj-$(CONFIG_RD_LZMA)	+= decompress_unlzma.o unlzma_syms.o
 
 
 obj-$(CONFIG_ZLIB_INFLATE) += zlib_inflate/

--- linux-2.6.24.2/lib/unlzma_syms.c	
+++ linux-2.6.24.2/lib/unlzma_syms.c	
@@ -0,0 +1,14 @@
+/*
+ * linux/lib/unlzma_syms.c
+ *
+ * Exported symbols for the unlzma functionality.
+ *
+ */
+
+#include <linux/module.h>
+#include <linux/init.h>
+
+#include <linux/decompress_unlzma.h>
+
+EXPORT_SYMBOL(unlzma);
+MODULE_LICENSE("GPL");
