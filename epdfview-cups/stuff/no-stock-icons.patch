--- a/src/gtk/FindView.cxx
+++ b/srv/gtk/FindView.cxx
@@ -50,7 +50,7 @@
     gtk_toolbar_set_style (GTK_TOOLBAR (m_FindBar), GTK_TOOLBAR_BOTH_HORIZ);
 
     // The "Close" button.
-    m_Close = gtk_tool_button_new_from_stock (GTK_STOCK_CLOSE);
+    m_Close = gtk_tool_button_new (gtk_image_new_from_icon_name ("window-close", GTK_ICON_SIZE_SMALL_TOOLBAR), _("Close"));
     gtk_toolbar_insert (GTK_TOOLBAR (m_FindBar), m_Close, -1);
 
     // The text to find entry.
@@ -65,13 +65,13 @@
     gtk_toolbar_insert (GTK_TOOLBAR (m_FindBar), textToFindItem, -1);
 
     // The "Find Next" button.
-    m_FindNext = gtk_tool_button_new_from_stock (EPDFVIEW_STOCK_FIND_NEXT);
+    m_FindNext = gtk_tool_button_new (gtk_image_new_from_icon_name ("go-next", GTK_ICON_SIZE_SMALL_TOOLBAR), _("Find _Next"));
     gtk_tool_item_set_is_important (m_FindNext, TRUE);
     gtk_toolbar_insert (GTK_TOOLBAR (m_FindBar), m_FindNext, -1);
 
     // The "Find Previous" button.
     m_FindPrevious = 
-        gtk_tool_button_new_from_stock (EPDFVIEW_STOCK_FIND_PREVIOUS);
+        gtk_tool_button_new (gtk_image_new_from_icon_name ("go-previous", GTK_ICON_SIZE_SMALL_TOOLBAR), _("Find _Previous"));
     gtk_tool_item_set_is_important (m_FindPrevious, TRUE);
     gtk_toolbar_insert (GTK_TOOLBAR (m_FindBar), m_FindPrevious, -1);
 
--- a/src/gtk/MainView.cxx
+++ b/src/gtk/MainView.cxx
@@ -92,80 +92,80 @@
     { "GoMenu", NULL, N_("_Go"), NULL, NULL, NULL },
     { "HelpMenu", NULL, N_("_Help"), NULL, NULL, NULL },
 
-    { "OpenFile", GTK_STOCK_OPEN, N_("_Open"), "<control>O",
+    { "OpenFile", "document-open", N_("_Open"), "<control>O",
       N_("Open a PDF document"),
       G_CALLBACK (main_window_open_file_cb) },
 
-    { "ReloadFile", GTK_STOCK_REFRESH, N_("_Reload"), "<control>R",
+    { "ReloadFile", "view-refresh", N_("_Reload"), "<control>R",
       N_("Reload the current document"),
       G_CALLBACK (main_window_reload_cb) },
 
-    { "SaveFile", GTK_STOCK_SAVE, N_("_Save a Copy..."), "<control>S",
+    { "SaveFile", "document-save", N_("_Save a Copy..."), "<control>S",
       N_("Save a copy of the current document"),
       G_CALLBACK (main_window_save_file_cb) },
 
 #if defined (HAVE_CUPS)
-    { "Print", GTK_STOCK_PRINT, N_("_Print..."), "<control>P",
+    { "Print", "document-print", N_("_Print..."), "<control>P",
       N_("Print the current document"),
       G_CALLBACK (main_window_print_cb) },
 #endif // HAVE_CUPS
 
-    { "Quit", GTK_STOCK_CLOSE, N_("_Close"), "<control>W",
+    { "Quit", "window-close", N_("_Close"), "<control>W",
       N_("Close this window"),
       G_CALLBACK (main_window_quit_cb) },
 
-    { "Find", GTK_STOCK_FIND, N_("_Find"), "<control>F",
+    { "Find", "edit-find", N_("_Find"), "<control>F",
       N_("Find a word in the document"),
       G_CALLBACK (main_window_find_cb) },
 
-    { "Preferences", GTK_STOCK_PREFERENCES, N_("_Preferences..."), NULL,
+    { "Preferences", "preferences-system", N_("_Preferences..."), NULL,
       N_("Change the application's preferences"),
       G_CALLBACK (main_window_preferences_cb) },
 
-    { "ZoomIn", GTK_STOCK_ZOOM_IN, N_("Zoom _In"), "<control>plus",
+    { "ZoomIn", "zoom-in", N_("Zoom _In"), "<control>plus",
       N_("Enlarge the document"),
       G_CALLBACK (main_window_zoom_in_cb) },
 
-    { "ZoomOut", GTK_STOCK_ZOOM_OUT, N_("Zoom _Out"), "<control>minus",
+    { "ZoomOut", "zoom-out", N_("Zoom _Out"), "<control>minus",
       N_("Shrink the document"),
       G_CALLBACK (main_window_zoom_out_cb) },
 
-    { "RotateRight", EPDFVIEW_STOCK_ROTATE_RIGHT, N_("Rotate _Right"), "<control>bracketright",
+    { "RotateRight", "object-rotate-right", N_("Rotate _Right"), "<control>bracketright",
       N_("Rotate the document 90 degrees clockwise"),
       G_CALLBACK (main_window_rotate_right_cb) },
 
-    { "RotateLeft", EPDFVIEW_STOCK_ROTATE_LEFT, N_("Rotate _Left"), "<control>bracketleft",
+    { "RotateLeft", "object-rotate-left", N_("Rotate _Left"), "<control>bracketleft",
       N_("Rotate the document 90 degrees counter-clockwise"),
       G_CALLBACK (main_window_rotate_left_cb) },
 
-    { "GoToFirstPage", GTK_STOCK_GOTO_FIRST, N_("_First Page"), "<control>Home",
+    { "GoToFirstPage", "go-first", N_("_First Page"), "<control>Home",
       N_("Go to the first page"),
       G_CALLBACK (main_window_go_to_first_page_cb) },
 
-    { "GoToNextPage", GTK_STOCK_GO_FORWARD, N_("_Next Page"), "<Shift>Page_Down",
+    { "GoToNextPage", "go-next", N_("_Next Page"), "<Shift>Page_Down",
       N_("Go to the next page"),
       G_CALLBACK (main_window_go_to_next_page_cb) },
 
-    { "GoToPreviousPage", GTK_STOCK_GO_BACK, N_("_Previous Page"), "<Shift>Page_Up",
+    { "GoToPreviousPage", "go-previous", N_("_Previous Page"), "<Shift>Page_Up",
       N_("Go to the previous page"),
       G_CALLBACK (main_window_go_to_previous_page_cb) },
 
-    { "GoToLastPage", GTK_STOCK_GOTO_LAST, N_("_Last Page"), "<control>End",
+    { "GoToLastPage", "go-last", N_("_Last Page"), "<control>End",
       N_("Go to the last page"),
       G_CALLBACK (main_window_go_to_last_page_cb) },
 
-    { "About", GTK_STOCK_ABOUT, N_("_About"), NULL,
+    { "About", "help-about", N_("_About"), NULL,
       N_("Display application's credits"),
       G_CALLBACK (main_window_about_box_cb) },
 
     // Accelerator keys.
-    { "Slash", GTK_STOCK_FIND, NULL, "slash", NULL,
+    { "Slash", "edit-find", NULL, "slash", NULL,
       G_CALLBACK (main_window_find_cb) },
 
-    { "KPAdd", GTK_STOCK_ZOOM_IN, NULL, "<control>KP_Add", NULL,
+    { "KPAdd", "zoom-in", NULL, "<control>KP_Add", NULL,
       G_CALLBACK (main_window_zoom_in_cb) },
 
-    { "KPSubtract", GTK_STOCK_ZOOM_OUT, NULL, "<control>KP_Subtract",
+    { "KPSubtract", "zoom-out", NULL, "<control>KP_Subtract",
       NULL,
       G_CALLBACK (main_window_zoom_out_cb) }
 };
@@ -188,21 +188,21 @@
       N_("Show or hide the document's outline"),
       G_CALLBACK (main_window_show_index_cb), FALSE },
 
-    { "ZoomFit", GTK_STOCK_ZOOM_FIT, N_("Zoom to _Fit"), NULL,
+    { "ZoomFit", "zoom-fit-best", N_("Zoom to _Fit"), NULL,
       N_("Make the current document fill the window"),
       G_CALLBACK (main_window_zoom_fit_cb), FALSE },
 
-    { "ZoomWidth", EPDFVIEW_STOCK_ZOOM_WIDTH, N_("Zoom to _Width"), NULL,
+    { "ZoomWidth", "format-justify-fill", N_("Zoom to _Width"), NULL,
       N_("Make the current document fill the window width"),
       G_CALLBACK (main_window_zoom_width_cb), FALSE },
 };
 
 static GtkRadioActionEntry g_PageScrollEntries[] =
 {   
-    { "PageModeScroll", GTK_STOCK_FULLSCREEN, N_("Scroll"), NULL,
+    { "PageModeScroll", "view-fullscreen", N_("Scroll"), NULL,
       N_("Mouse scroll page"), (int)PagePterModeScroll },
 
-    { "PageModeText", GTK_STOCK_SELECT_ALL, N_("Select Text"), NULL,
+    { "PageModeText", "edit-select-all", N_("Select Text"), NULL,
       N_(" Mouse select text"), (int)PagePterModeSelectText },
 };
 
@@ -1031,35 +1031,7 @@
 void
 MainView::setMainWindowIcon ()
 {
-    const gchar *iconFiles[] =
-    {
-        "icon_epdfview-48.png",
-        "icon_epdfview-32.png",
-        "icon_epdfview-24.png",
-    };
-
-    GList *iconList = NULL;
-    int iconFilesNum = G_N_ELEMENTS (iconFiles);
-    for ( int iconIndex = 0 ; iconIndex < iconFilesNum ; iconIndex++ )
-    {
-        gchar *filename = g_strconcat (DATADIR, "/pixmaps/", 
-                                       iconFiles[iconIndex], NULL);
-        GError *error = NULL;
-        GdkPixbuf *iconPixbuf = gdk_pixbuf_new_from_file (filename, &error);
-        if ( NULL != iconPixbuf )
-        {
-            iconList = g_list_prepend (iconList, iconPixbuf);
-        }
-        else
-        {
-            g_warning ("Error loading icon: %s\n", error->message);
-            g_error_free (error);
-        }
-        g_free (filename);
-    }
-    gtk_window_set_default_icon_list (iconList);
-    g_list_foreach (iconList, (GFunc)g_object_unref, NULL);
-    g_list_free (iconList);
+    gtk_window_set_default_icon_name ("epdfview");
 }
 
 ///
