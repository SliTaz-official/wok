The Template Toolkit is a collection of Perl modules which implement a fast,
flexible, powerful and extensible template processing system.

It is "input-agnostic" and can be used equally well for processing any kind
of text documents: HTML, XML, CSS, Javascript, Perl code, plain text,
and so on.
However, it is most often used for generating static and dynamic web content,
so that's what we'll focus on here.

Although the Template Toolkit is written in Perl, you don't need to be a Perl
programmer to use it. It was designed to allow non-programmers to easily
create and maintain template-based web sites without having to mess around
writing Perl code or going crazy with cut-n-paste.

However, the Template Toolkit is also designed to be extremely flexible and
extensible. If you are a Perl programmer, or know someone who is, then you
can easily hook the Template Toolkit into your existing code, data, databases
and web applications.
Furthermore, you can easily extend the Template Toolkit through the use of
its plugin mechanism and other developer APIs.

Whatever context you use it in, the primary purpose of the Template Toolkit
is to allow you to create a clear separation between the presentation elements
of your web site and everything else.

If you're generating static web pages, then you can use it to separate the
commonly repeated user interface elements on each page (headers, menus,
footers, etc.) from the core content.
If you're generating dynamic web pages for the front end of a web application,
then you'll also be using it to keep the back-end Perl code entirely separate
from the front-end HTML templates.
Either way, a clear separation of concerns is what allow you to concentrate
on one thing at a time without the other things getting in your way.
And that's what the Template Toolkit is all about.
