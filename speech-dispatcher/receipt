# SliTaz package receipt.

PACKAGE="speech-dispatcher"
VERSION="0.9.1"
CATEGORY="utilities"
SHORT_DESC="Common interface to speech synthesis."
MAINTAINER="paul@slitaz.org"
LICENSE="LGPL2.1"
WEB_SITE="https://www.freebsoft.org/speechd"

TARBALL="$PACKAGE-$VERSION.tar.gz"
WGET_URL="https://github.com/brailcom/speechd/archive/$VERSION.tar.gz"

DEPENDS="alsa-lib dotconf espeak glib  python"
BUILD_DEPENDS="alsa-lib-dev libtool dotconf-dev espeak-dev glib-dev \
	libvorbis-dev flac-dev libsndfile-dev pkg-config python-dev texinfo"
SUGGESTED="libvorbis flac"

current_version()
{
	wget -O - ${WGET_URL%/arch*}/releases 2>/dev/null | \
	sed '/archive.*tar/!d;s|.*/\(.*\).tar.*|\1|;q'
}

# Rules to configure and make the package.
compile_rules()
{
	# Binutils 2.22 break many packages build without LDFLAGS set correctly.
	export LDFLAGS="$LDFLAGS -Wl,--copy-dt-needed-entries"

	# tiny patches and fixes	0.6.7
#	cd $src/src/python/speechd_config
#	sed -i 's/wavfile = paths.SPD_SOUND_DATA_PATH + "test.wav"/wavfile = os.path.join(paths.SPD_SOUND_DATA_PATH,"test.wav")/' config.py
#	sed -i 's/6561/6560/g' config.py
#	cd ../
#	sed -i '/speechd_config\/test.wav/d' Makefile.in
#	sed -i 's|--prefix=${prefix}|--root=`pwd`/_pkg|' Makefile.in
#	cd ../../

	autoreconf --install &&
	./configure				\
		--prefix=/usr			\
		--infodir=/usr/share/info	\
		--mandir=/usr/share/man		\
		--sysconfdir=/etc		\
		--with-espeak			\
		--with-systemdsystemunitdir=no	\
		$CONFIGURE_ARGS &&
	make -j 1 &&
	make DESTDIR=$DESTDIR install
}

# Rules to gen a SliTaz package suitable for Tazpkg.
genpkg_rules()
{
	mkdir -p $fs/usr/share/sounds/speech-dispatcher

	cp -a $install/usr/bin		$fs/usr
	cp -a $install/etc		$fs
	cp -a $install/usr/lib		$fs/usr
	cp -a $install/usr/share	$fs/usr

	# copy python stuff
#	cp -a $src/src/python/_pkg/usr	$fs	# 0.6.7
	cp $src/src/api/python/speechd_config/test.wav \
					$fs/usr/share/sounds/speech-dispatcher

	# remove unneeded libraries
	rm -rf $fs/usr/share/info
	rm -rf $fs/usr/lib/*.*a
	rm -rf $fs/usr/lib/speech-dispatcher/*.*a
}
