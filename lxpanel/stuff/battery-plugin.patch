--- a/src/plugins/batt/batt.c	2010-02-08 07:37:52.000000000 +0100
+++ b/src/plugins/batt/batt.c	2010-09-27 02:24:22.781006054 +0200
@@ -95,7 +95,7 @@
 typedef struct {
     char *command;
     sem_t *lock;
-} alarm;
+} Alarm;
 
 static void destructor(Plugin *p);
 static void update_display(lx_battery *lx_b, gboolean repaint);
@@ -103,7 +103,7 @@
 /* alarmProcess takes the address of a dynamically allocated alarm struct (which
    it must free). It ensures that alarm commands do not run concurrently. */
 static void * alarmProcess(void *arg) {
-    alarm *a = (alarm *) arg;
+    Alarm *a = (Alarm *) arg;
 
     sem_wait(a->lock);
     system(a->command);
@@ -157,7 +157,7 @@
 	/* Run the alarm command if it isn't already running */
 	if (alarmCanRun) {
 	    
-	    alarm *a = (alarm *) malloc(sizeof(alarm));
+	    Alarm *a = (Alarm *) malloc(sizeof(alarm));
 	    a->command = lx_b->alarmCommand;
 	    a->lock = &(lx_b->alarmProcessLock);
 	    
