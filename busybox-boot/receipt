# SliTaz package receipt.

PACKAGE="busybox-boot"
VERSION="1.21.1"
CATEGORY="base-system"
SHORT_DESC="Many common UNIX utilities for core-5in1/boot flavor."
MAINTAINER="pascal.bellard@slitaz.org"
LICENSE="GPL2"
DEPENDS="linux syslinux"
WANTED="busybox"
WEB_SITE="http://www.busybox.net/"
CONFIG_FILES=""

# Rules to gen a SliTaz package suitable for Tazpkg.
genpkg_rules()
{
	jslinux=false
	mkdir -p $fs/usr/share/boot/bin $fs/usr/share/boot/dev
	CHOICE=static
	for i in uclibc musl diet ; do
		[ -x $src/busybox-$i ] || continue
		[ $(stat -c %s $src/busybox-$i) -lt \
	          $(stat -c %s $src/busybox-$CHOICE) ] &&
		CHOICE=$i
	done
	cp -a $src/busybox-$CHOICE $fs/usr/share/boot/bin/busybox
	chmod 4755 $fs/usr/share/boot/bin/busybox
	for i in sed mount mknod mkdir sh cp ln ; do
		ln $fs/usr/share/boot/bin/busybox $fs/usr/share/boot/bin/$i
	done
	mknod -m 660 $fs/usr/share/boot/dev/console c 5 1
	mknod -m 771 $fs/usr/share/boot/dev/null c 1 3
	mknod -m 660 $fs/usr/share/boot/dev/tty c 5 0
	mknod -m 660 $fs/usr/share/boot/dev/tty1 c 4 1
	if $jslinux; then
		mknod -m 644 $fs/usr/share/boot/dev/clipboard c 10 231
		mknod -m 660 $fs/usr/share/boot/dev/ttyS0 c 4 64
	fi
	cat > $fs/usr/share/boot/init <<EOT
#!/bin/sh

export PATH=/bin
export HOME=/
export TERM=vt100

if [ -n "\$1" ]; then
	[ -n "\$broadcast" ] && BROADCAST="broadcast \$broadcast"
	[ -n "\$subnet" ] && NETMASK="netmask \$subnet"
	ifconfig \$interface \${ip:-0.0.0.0} \$BROADCAST \$NETMASK
	while route del default gw 0.0.0.0 dev \$interface ; do : ; done
	for i in \$router ; do route add default gw \$i dev \$interface; done
	[ -n "\$domain" ] && echo search \$domain > /etc/resolv.conf
	for i in \$dns ; do echo nameserver \$i; done >> /etc/resolv.conf
	exit 0
fi

mkdir /tmp /mnt /proc /etc
mount -t proc none /proc
while read name major minor ; do
	for i in '' 1 2 3 4 5 6 7 8 9 ; do
		mknod -m 644 /dev/\$name\$i b \$major \$((\$i + \$minor))
	done
done <<EOM
loop	7	0
hda	3	0
hdb	3	64
sda	8	0
sdb	8	16
EOM

arg()
{
root="\$(sed "s/^/ /;s/\$/ /;/ \$1=/!d;s/.* \$1=\\([^ ]*\\).*/\\1/" </proc/cmdline)"
busybox [ -n "\$root" ]
}

arg init
init=\${root:-/sbin/init}
arg root && root="\$(echo \$root | sed 's|/|\\\\/|g')" &&
	mount \$(busybox blkid | sed "s/\"//g;/\$root/!d;s/:.*//;q") /mnt
arg loopfs && busybox losetup /dev/loop /mnt/\$root && mount /dev/loop /mnt
arg subroot && cp /bin/busybox /mnt/\$root/dev/shm &&
	chroot="\$root/dev/shm/busybox chroot \$root"
busybox [ -x /mnt/\$root\$init ] && exec busybox switch_root mnt \$chroot \$init

for i in \$(busybox --list) ; do busybox ln /bin/busybox /bin/\$i; done

[ -d /proc/bus/usb ] && mount -t usbfs usbfs /proc/bus/usb
while read type dir ; do
	grep -qs \$type /proc/filesystems &&
	mkdir \$dir && mount -t \$type none \$dir
done <<EOM
sysfs	/sys
devpts	/dev/pts
EOM

TTY=\$(tty 2>/dev/null)
TTY=\${TTY:-/dev/tty1}
EOT
	$jslinux && echo 'stty -F $TTY rows 30 2>/dev/null' >> $fs/usr/share/boot/init
	cat >> $fs/usr/share/boot/init <<EOT

[ -x /bin/udhcpc ] && udhcpc -b -s /init
while true; do
	busybox | sed '/Current/,\$!d'
	if [ -x /bin/setsid ]; then
		setsid sh -c "exec sh <\$TTY >\$TTY 2>&1"
	else
		sh <\$TTY >\$TTY 2>&1
	fi
done
EOT
	chmod +x $fs/usr/share/boot/init
	( cd $fs/usr/share/boot ; find bin dev init | cpio -o -H newc > initrd )
	rm -rf $fs/usr/share/boot/bin $fs/usr/share/boot/dev $fs/usr/share/boot/init
}
