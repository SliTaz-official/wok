HMAC is used for message integrity checks between two parties
that share a secret key, and works in combination with some
other Digest algorithm, usually MD5 or SHA-1.
The HMAC mechanism is described in RFC 2104.

HMAC follow the common Digest:: interface, but the constructor
takes the secret key and the name of some other simple Digest::
as argument.

The hmac() and hmac_hex() functions and the Digest::HMAC->new()
constructor takes an optional $blocksize argument as well.
The HMAC algorithm assumes the digester to hash by iterating a
basic compression function on blocks of data and the $blocksize
should match the byte-length of such blocks.

The default $blocksize is 64 which is suitable for the MD5 and
SHA-1 digest functions.
For stronger algorithms the blocksize probably needs to be
increased.
