--- memtest86+-5.01/setup.S
+++ memtest86+-5.01/setup.S
@@ -27,11 +27,10 @@
 #ljmp	$INITSEG, $(reload - start + 0x200)
 reload:
 	movw	$INITSEG, %ax
-	movw	%ax, %ds
 	movw	%ax, %es
 	movw	%ax, %fs
 	movw	%ax, %ss	# reset the stack to INITSEG:0x4000-12.
-	movw	%dx, %sp
+	movw	$0x4000-12, %sp
 	push	%cs
 	pop	%ds
 	lidt	idt_48 - start	# load idt with 0,0
@@ -50,13 +49,13 @@
      	jz	alt_a20_done
      	
      	/* set or clear bit1, the ALT_A20_GATE bit */
-     	movb	4(%esp), %ah
-     	testb	%ah, %ah
-     	jz	alt_a20_cont1
+     	//movb	4(%esp), %ah
+     	//testb	%ah, %ah
+     	//jz	alt_a20_cont1
      	orb	$2, %al
-     	jmp	alt_a20_cont2
+     	//jmp	alt_a20_cont2
 alt_a20_cont1:
-	and	$0xfd, %al
+	//and	$0xfd, %al
 
 	/* clear the INIT_NOW bit; don't accidently reset the machine */
 alt_a20_cont2:
@@ -87,8 +86,8 @@
 	movw	$KERNEL_DS, %ax
 	movw	%ax, %ds
 	movw	%ax, %es
-	movw	%ax, %ss
 	movw	%ax, %fs
+	movw	%ax, %ss
 	movw	%ax, %gs
 
 data32	ljmp	$KERNEL_CS, $(TSTLOAD <<4)	# jmp offset 2000 of segment 0x10 (cs)
