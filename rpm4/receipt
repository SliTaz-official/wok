# SliTaz package receipt.

PACKAGE="rpm4"
VERSION="4.15.1"
CATEGORY="system-tools"
TAGS="package-manager"
SHORT_DESC="RPM Package Manager."
MAINTAINER="erjo@slitaz.org"
LICENSE="GPL2"
WEB_SITE="https://www.rpm.org/"

SOURCE="rpm"
TARBALL="$SOURCE-$VERSION.tar.bz2"
WGET_URL="http://ftp.rpm.org/releases/rpm-${VERSION%.*}.x/$TARBALL"

DEPENDS="beecrypt bzlib db expat gcc-lib-base libcomerr3 libkrb5 
	libmagic liblzma neon nspr nss popt sqlite zlib"
BUILD_DEPENDS="beecrypt-dev db-dev gettext libarchive-dev liblzma 
	liblzma-dev libmagic-dev nspr-dev nss-dev popt-dev python-dev 
	zlib-dev"

# Rules to configure and make the package.
compile_rules()
{
	CPPFLAGS="$CPPFLAGS -I/usr/include/nspr -I/usr/include/nss" \
	./configure				\
		--prefix=/usr			\
		--infodir=/usr/share/info	\
		--with-selinux=no		\
		--with-lua=no			\
		--with-dmalloc=no		\
		--with-efence=no		\
		--with-external-db		\
		--localstatedir=/var		\
		--mandir=/usr/share/man		\
		$CONFIGURE_ARGS &&
	make $MAKEFLAGS &&
	make DESTDIR=$DESTDIR install
}

# Rules to gen a SliTaz package suitable for Tazpkg.
genpkg_rules()
{
	mkdir -p \
		$fs/usr/bin \
		$fs/usr/lib \
		$fs/var/lib/rpm \
		$fs/usr/src/redhat/SOURCES \
		$fs/usr/src/redhat/BUILD \
		$fs/usr/src/redhat/RPMS \
		$fs/usr/src/redhat/SPECS \
		$fs/usr/src/redhat/SRPMS

	cp -a $install/usr/bin		$fs/usr
	cp -a $install/bin/*		$fs/usr/bin
	cp -a $install/usr/lib/*.so*	$fs/usr/lib
	cp -a $install/usr/lib/rpm	$fs/usr/lib
}

post_install()
{
	cmd=$(readlink $root/bin/rpm)
	if [ "$cmd" != '/usr/bin/rpm' ]
	  then
		echo ''
		echo "**** Actual RPM link : $cmd"
		echo ''
		echo -n 'Do you want rpm for /bin/rpm (Y/n) ? : '
		read -t 30 anser
		if [ "$anser" != 'n' ]
		  then
			echo ''
			action 'Removing rpm link to make a new one pointing on /usr/bin/rpm...'
			rm $root/bin/rpm &&
			ln -sf $root/usr/bin/rpm $root/bin/rpm
			status
		else
			echo ''
			echo "Leaving /bin/rpm to : $cmd"
		fi
	fi

	# Building rpm database.
	$1/usr/bin/rpm --initdb --quiet
}

pre_remove()
{
	if [ -d "$1/var/lib/rpm" ]
	  then
		rm -f "$1"/var/lib/rpm/*
	fi
}

post_remove()
{
	cmd=$(readlink "$1/bin/rpm")
	if [ "$cmd" != '/bin/rpm' ]
	  then
		newline
		action 'Restore applets from busybox...'
		ln -sf /bin/busybox "$1/bin/rpm"
		ln -sf /bin/busybox "$1/usr/bin/rpm2cpio"
		status
	fi
}
