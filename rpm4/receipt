# SliTaz package receipt.

PACKAGE="rpm4"
VERSION="4.10.0"
CATEGORY="system-tools"
SHORT_DESC="RPM Package Manager"
MAINTAINER="erjo@slitaz.org"
LICENSE="GPL2"
SOURCE="rpm"
TARBALL="$SOURCE-$VERSION.tar.bz2"
WEB_SITE="http://www.rpm.org/"
WGET_URL="http://www.rpm.org/releases/rpm-${VERSION:0:4}.x/$TARBALL"
TAGS="package-manager"

DEPENDS="popt beecrypt bzlib expat sqlite zlib gcc-lib-base neon libkrb5 \
libcomerr3 nss nspr db liblzma libmagic"
BUILD_DEPENDS="beecrypt beecrypt-dev popt-dev gettext zlib-dev python-dev \
nss-dev nspr-dev db-dev liblzma liblzma-dev libmagic-dev"

# Rules to configure and make the package.
compile_rules()
{
	cd $src
	CPPFLAGS="$CPPFLAGS -I/usr/include/nspr -I/usr/include/nss" ./configure \
	--prefix=/usr  \
	 --infodir=/usr/share/info \
	 --with-selinux=no \
	 --with-lua=no \
	 --with-dmalloc=no \
	 --with-efence=no \
	 --with-external-db \
	 --mandir=/usr/share/man $CONFIGURE_ARGS &&
	make $MAKEFLAGS &&
	make DESTDIR=$DESTDIR install
}

# Rules to gen a SliTaz package suitable for Tazpkg.
genpkg_rules()
{
	mkdir -p $fs/usr/bin \
		$fs/usr/lib \
		$fs/var/lib/rpm \
		$fs/usr/src/redhat/SOURCES \
		$fs/usr/src/redhat/BUILD \
		$fs/usr/src/redhat/RPMS \
		$fs/usr/src/redhat/SPECS \
		$fs/usr/src/redhat/SRPMS
		
	cp -a $install/usr/bin $fs/usr
	cp -a $install/bin/* $fs/usr/bin
	cp -a $install/usr/lib/*.so* $fs/usr/lib
	cp -a $install/usr/lib/rpm $fs/usr/lib
}

post_install()
{
	echo "Processing post install commands..."
	cmd=`readlink $root/bin/rpm`
    if [ ! "$cmd" = "/usr/bin/rpm" ]; then
        echo ""
        echo "**** Actual RPM link : $cmd"
        echo ""
        echo -n "Do you want rpm  for /bin/rpm (Y/n) ? : "; read -t 30 anser
        if [ "$anser" != "n" ]; then
            echo ""
            echo -n "Removing rpm link to make a new one pointing on /usr/bin/rpm..."
            rm $root/bin/rpm && ln -sf $root/usr/bin/rpm $root/bin/rpm
            status
        else
            echo ""
            echo "Leaving /bin/rpm to : $cmd"
        fi
    fi
                
    # Building rpm database.
	$root/usr/bin/rpm --initdb --quiet
}

pre_remove()
{
	if [ -d "$1/var/lib/rpm" ]; then
		rm -f "$1"/var/lib/rpm/*
	fi
}

post_remove()
{
	echo "Processing post remove commands..."
	cmd=$(readlink "$1/bin/rpm")
    	if [ ! "$cmd" = "/bin/rpm" ]; then
		echo -n "Restore applets from busybox..."
		ln -sf /bin/busybox "$1/bin/rpm"
		ln -sf /bin/busybox "$1/usr/bin/rpm2cpio"
		status
	fi
}
