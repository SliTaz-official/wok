From: Mattia Rizzolo <mattia@mapreri.org>
Date: Tue, 8 Jul 2014 12:33:57 +0200
Subject: Fix_FTBFS_on_gcc-4.8

Last-Update: 2014-07-02

Signed-off-by: Matteo F. Vescovi <mfvescovi@gmail.com>
---
 src/libavoid/vpsc.cpp        | 2 +-
 src/libcola/straightener.cpp | 6 +++---
 src/libcroco/cr-parser.c     | 2 +-
 src/libvpsc/block.cpp        | 2 +-
 4 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/libavoid/vpsc.cpp b/src/libavoid/vpsc.cpp
index 19d3603..1646dda 100644
--- a/src/libavoid/vpsc.cpp
+++ b/src/libavoid/vpsc.cpp
@@ -422,7 +422,7 @@ Constraint* IncSolver::mostViolated(Constraints &l) {
     // downwards.  There is always at least 1 element in the
     // vector because of search.
     // TODO check this logic and add parens:
-    if((deletePoint != end) && ((minSlack < ZERO_UPPERBOUND) && !v->active || v->equality)) {
+    if((deletePoint != end) && (((minSlack < ZERO_UPPERBOUND) && !v->active) || v->equality)) {
         *deletePoint = l[l.size()-1];
         l.resize(l.size()-1);
     }
diff --git a/src/libcola/straightener.cpp b/src/libcola/straightener.cpp
index e237c03..7c73cb9 100644
--- a/src/libcola/straightener.cpp
+++ b/src/libcola/straightener.cpp
@@ -108,7 +108,7 @@ namespace straightener {
     int compare_events(const void *a, const void *b) {
         Event *ea=*(Event**)a;
         Event *eb=*(Event**)b;
-        if(ea->v!=NULL&&ea->v==eb->v||ea->e!=NULL&&ea->e==eb->e) {
+        if((ea->v!=NULL&&ea->v==eb->v)||(ea->e!=NULL&&ea->e==eb->e)) {
             // when comparing opening and closing from object
             // open must come first
             if(ea->type==Open) return -1;
@@ -263,8 +263,8 @@ namespace straightener {
                         // node is on an edge
                         Edge *edge=(*i)->edge;
                         if(!edge->isEnd(v->id)
-                                &&(l!=NULL&&!edge->isEnd(l->id)||l==NULL)
-                                &&(r!=NULL&&!edge->isEnd(r->id)||r==NULL)) {
+                                &&((l!=NULL&&!edge->isEnd(l->id))||l==NULL)
+                                &&((r!=NULL&&!edge->isEnd(r->id))||r==NULL)) {
                             if(lastNode!=NULL) {
                                 //printf("  Rule A: Constraint: v%d +g <= v%d\n",lastNode->id,(*i)->id);
                                 cs.push_back(createConstraint(lastNode,*i,dim));
diff --git a/src/libcroco/cr-parser.c b/src/libcroco/cr-parser.c
index 5b0a56f..a8e2de5 100644
--- a/src/libcroco/cr-parser.c
+++ b/src/libcroco/cr-parser.c
@@ -2408,7 +2408,7 @@ cr_parser_parse_stylesheet (CRParser * a_this)
                                                  import_string,
                                                  NULL, &location) ;
 
-                                        if ((PRIVATE (a_this)->sac_handler->resolve_import == TRUE)) {
+                                        if (PRIVATE (a_this)->sac_handler->resolve_import == TRUE) {
                                                 /*
                                                  *TODO: resolve the
                                                  *import rule.
diff --git a/src/libvpsc/block.cpp b/src/libvpsc/block.cpp
index 221df53..0bd662f 100644
--- a/src/libvpsc/block.cpp
+++ b/src/libvpsc/block.cpp
@@ -72,7 +72,7 @@ void Block::setUpConstraintHeap(PairingHeap<Constraint*>* &h,bool in) {
 		for (Cit j=cs->begin();j!=cs->end();++j) {
 			Constraint *c=*j;
 			c->timeStamp=blockTimeCtr;
-			if (c->left->block != this && in || c->right->block != this && !in) {
+			if ((c->left->block != this && in) || (c->right->block != this && !in)) {
 				h->insert(c);
 			}
 		}
