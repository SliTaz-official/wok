Ftop is to files what top is to processes. The progress of all open files and 
file systems can be monitored. If run as a regular user, the set of open files 
will be limited to those in that user's processes (which is generally all that 
is of interest to the user). In any case, the selection of which files to 
display is possible through a wide assortment of options. As with top, the 
items are displayed in order from most to least active.

The interface extends beyond the traditional capabilities and expectations of 
console applications. For instance, ftop supports two output modes, full (using 
ncurses) and limited (simple plain text). The output mode can be specified at 
invocation, or changed dynamically as the program runs. Limited output mode is 
well suited for piping into other utilities (such as grep or sed) or simply for 
redirecting into a file. Full output mode is much more visually appealing and 
contains a few more features. Keyboard control and interaction is not limited 
to full output mode; it is also available in limited output mode.

As another unique usability feature, the command line options for ftop exactly 
match the run-time keyboard commands. In other words, the '-p' command line 
option can be used to specify a list of processes at invocation, and while ftop 
is running, 'p' can be pressed to modify the list. As another example, '-h' 
will show the help screen when ftop starts, or 'h' can be pressed at any time 
afterward to show the help screen. This commonality exists for every 
configuration option. And the current value for all options can be viewed at a 
glance in the options screen.

Finally, ftop can also be easily configured to display additional files that 
are not currently open by any local processes, and file system usage. If an NFS 
client is writing a file on a local export, that file may not be open by any 
local process, so the additional files feature is used to display those files. 
One or more file systems can be monitored if many files are being created, for 
instance while restoring from a backup or extracting a large archive.

Ftop has many more features than those described here. Detailed online help 
describes all available functionality, and provides examples of some of the 
interesting ways in which ftop can be used.

Ftop currently makes use of the entries for each process in /proc/PID/fdinfo/
to determine the file position and other details.
