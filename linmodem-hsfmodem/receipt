# SliTaz package receipt.

PACKAGE="linmodem-hsfmodem"
SOURCE="hsfmodem"
VERSION="7.80.02.06full"
CATEGORY="non-free"
SHORT_DESC="Driver for the Conexant (formerly Rockwell) HSF Softmodem family."
MAINTAINER="orphaned@sliatz.org"
TARBALL="$SOURCE-$VERSION.tar.gz"
WEB_SITE="http://www.linuxant.com/drivers"
WGET_URL="http://www.linuxant.com/drivers/hsf/full/archive/$SOURCE-$VERSION/$TARBALL"

DEPENDS="module-init-tools perl usbutils"
BUILD_DEPENDS="cpio linux lzma linux-module-headers util-linux-ng-getopt \
usbutils-dev"

# Rules to configure and make the package.
compile_rules()
{
	cd $src
	echo "Apply $file..."
	patch -p1 < $(ls $stuff/$SOURCE-*.diff) || return 1
	grep -rl 'uname -r' . | xargs sed -i "s/uname -r/echo $kvers/g"
	# build driver
	echo "Build driver"
	make ROOT=$DESTDIR install
	# build kernel modules
	echo "Running $DESTDIR/usr/sbin/hsfconfig -ka..."
	$DESTDIR/usr/sbin/hsfconfig -ka
	echo " OK"
}

# Rules to gen a SliTaz package suitable for Tazpkg.
genpkg_rules()
{
	# kernel modules
	mkdir -p $fs/lib/modules/$kvers
	cp -a /lib/modules/$kvers/extra $fs/lib/modules/$kvers
	# cleaning up
	rm -r /lib/modules/$kvers/extra
	# command files
	mkdir -p $fs/usr
	cp -a $_pkg/usr/sbin $fs/usr
	cp -a $_pkg/usr/lib $fs/usr
	# config files
	mkdir -p $fs/etc
	cp -a $_pkg/etc/hsfmodem $fs/etc
	cp -a $stuff/zone.tab $fs/etc/hsfmodem
}

post_install()
{
	depmod -a
	echo -n "Install serial port devices"
	hsfconfig -s > /dev/null
	status
	echo -n "Install kernel modules"
	modprobe -v /dev/ttySHSF > /dev/null
	status
	echo -n "Set region"
	hsfconfig -c AUTO
	echo "-----------------------------------------------------------------------------"
	echo "To enable your modem's full functionality (high-speed 56k data and FAX),"
	echo "a license registration key must be obtained from Linuxant and entered with"
	echo "hsfconfig --license."
	echo ""
	echo "Without a proper license key, the modem can only operate in FREE mode,"
	echo "limited to a maximum speed of 14.4Kbps (V.32bis) and the FAX"
	echo "functionality will not be available."
}

pre_remove()
{
	hsfstop
}

post_remove()
{
	depmod -a
	rm -r /etc/hsfmodem
}
