# SliTaz package receipt.

PACKAGE="usbip"
VERSION="0.1.7"
CATEGORY="system-tools"
SHORT_DESC="general USB device sharing system over IP network."
MAINTAINER="pascal.bellard@slitaz.org"
TARBALL="$PACKAGE-$VERSION.tar.gz"
DEPENDS="sysfsutils glib libwrap"
BUILD_DEPENDS="sysfsutils-dev lzma libtool glib linux-module-headers libwrap libwrap-dev"
WEB_SITE="http://usbip.sourceforge.net/"
WGET_URL="$SF_MIRROR/$PACKAGE/$TARBALL"
TAGS="usb"

# Rules to configure and make the package.
compile_rules()
{
	cd $src/drivers
	# get kernel version
	if [ ! -d $WOK/linux/taz ]; then
		tazwok cook linux
	fi
	LINUX=$WOK/linux/$(ls $WOK/linux/taz)
	KERNEL_VERSION=`grep  ^VERSION= $WOK/linux/receipt | cut -d "=" -f2 | sed -e 's/"//g'`

	mkdir -p ../_pkg/lib/modules/$KERNEL_VERSION-slitaz/misc
	if [ -d $LINUX/_pkg/lib/modules/*/kernel/drivers/staging/usbip ]; then
		echo "Using linux-staging usbip modules."
		cp $LINUX/_pkg/lib/modules/*/kernel/drivers/staging/usbip/* \
			../_pkg/lib/modules/$KERNEL_VERSION-slitaz/misc
	else
		# Select patch according to kernel version
		patch_dir=${KERNEL_VERSION%.*}
		[ "$(echo $ker | sed 's/[0-9]//g')" = ".." ] && patch_dir=$KERNEL_VERSION
		i=${patch_dir##*.}
		while [ ! -e ${patch_dir%.*}.$i ]; do
			[ "$i" = "0" ] && break
			i=$(($i - 1))
		done
		patch_dir=${patch_dir%.*}.$i
		cd $patch_dir
		make KSOURCE=/usr/src/linux || return 1
		for i in *.ko; do
			lzma e $i ../../_pkg/lib/modules/${KERNEL_VERSION}-slitaz/misc/$i.gz
		done
	fi
	
	cd $src/src
	./autogen.sh
	./configure --prefix=/usr --infodir=/usr/share/info \
	--mandir=/usr/share/man $CONFIGURE_ARGS &&
	make &&
	make DESTDIR=$PWD/../_pkg install
}

# Rules to gen a SliTaz package suitable for Tazpkg.
genpkg_rules()
{
	mkdir -p $fs/usr/lib
	cp -a $_pkg/usr/bin $fs/usr
	cp -a $_pkg/usr/share $fs/usr
	cp -a $_pkg/usr/lib/*.so* $fs/usr/lib
}

