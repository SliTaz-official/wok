From 54a0fe298b4d6d948cffbd6fbbbe7dbabc9a6bb1 Mon Sep 17 00:00:00 2001
From: Karel Zak <kzak@redhat.com>
Date: Mon, 19 Jul 2010 22:52:58 +0200
Subject: [PATCH] cfdisk: get_string not calculating correct limits

Reported-by: James L. Hammons <jlhamm@acm.org>
Signed-off-by: Karel Zak <kzak@redhat.com>
---
 fdisk/cfdisk.c |   11 ++++++++---
 1 files changed, 8 insertions(+), 3 deletions(-)

diff --git a/fdisk/cfdisk.c b/fdisk/cfdisk.c
index 7fa0b19..e7955fe 100644
--- a/fdisk/cfdisk.c
+++ b/fdisk/cfdisk.c
@@ -421,6 +421,11 @@ fdexit(int ret) {
     exit(ret);
 }
 
+/*
+ * Note that @len is size of @str buffer.
+ *
+ * Returns number of read bytes (without \0).
+ */
 static int
 get_string(char *str, int len, char *def) {
     size_t cells = 0, i = 0;
@@ -472,7 +477,7 @@ get_string(char *str, int len, char *def) {
 	    break;
 	default:
 #if defined(HAVE_LIBNCURSESW) && defined(HAVE_WIDECHAR)
-	    if (i < len && iswprint(c)) {
+	    if (i + 1 < len && iswprint(c)) {
 		wchar_t wc = (wchar_t) c;
 		char s[MB_CUR_MAX + 1];
 		int  sz = wctomb(s, wc);
@@ -492,7 +497,7 @@ get_string(char *str, int len, char *def) {
 			putchar(BELL);
 	    }
 #else
-	    if (i < len && isprint(c)) {
+	    if (i + 1 < len && isprint(c)) {
 	        mvaddch(y, x + cells, c);
 		if (use_def) {
 		    clrtoeol();
@@ -2405,7 +2410,7 @@ change_id(int i) {
 
     sprintf(def, "%02X", new_id);
     mvaddstr(COMMAND_LINE_Y, COMMAND_LINE_X, _("Enter filesystem type: "));
-    if ((len = get_string(id, 2, def)) <= 0 && len != GS_DEFAULT)
+    if ((len = get_string(id, 3, def)) <= 0 && len != GS_DEFAULT)
 	return;
 
     if (len != GS_DEFAULT) {
-- 
1.7.2.1

