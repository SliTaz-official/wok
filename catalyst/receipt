# SliTaz package receipt.

PACKAGE="catalyst"
VERSION="10.12"
CATEGORY="x-window"
MAINTAINER="jozee@slitaz.org"
SHORT_DESC="AMD/ATI beta drivers (non-free) for Radeon brand cards "
WEB_SITE="http://www.ati.amd.com"
TARBALL="ati-driver-installer-${VERSION/./-}-x86.x86_64.run"
WGET="http://www2.ati.com/drivers/linux/$TARBALL"
TAGS="drivers graphic video"
RUN_OPTS="--extract $PACKAGE-$VERSION"

DEPENDS="xorg-server mesa mesa-dri libdrm linux-drm fontconfig linux-agp \
xorg-libSM xorg-libXi xorg-libXcursor"
BUILD_DEPENDS="linux xorg-server-dev mesa-dev libdrm-dev linux-module-headers"

# Rules to configure and make the package.
compile_rules()
{
	cd $src
	#for i in autoconf.h utsrelease.h ; do
		#grep -rl linux/$i * | xargs sed -i "s|linux/$i|generated/$i|"
	#done
	echo "Applying patches..."
	patch -Np1 -i $stuff/makefile_compat.patch
	patch -Np1 -i $stuff/$PACKAGE-${kvers}.patch
	patch -Np1 -i $stuff/sema_init.patch
	cd $src/common/lib/modules/fglrx/build_mod
	cp $src/arch/x86/lib/modules/fglrx/build_mod/libfglrx_ip.a.GCC4 . 
	cp 2.6.x/Makefile .
	echo "Compiling the Kernel module..."
	make -C /usr/src/linux SUBDIRS=$(pwd) modules 
}	

# Rules to gen a SliTaz package suitable for Tazpkg.
genpkg_rules()
{
	EXTRAVERSION=_${kvers}

	mkdir -p \
		$fs/usr/share/pixmaps \
		$fs/usr/bin \
		$fs/usr/lib/xorg/modules \
		$fs/usr/share/licenses/$PACKAGE \
		$fs/lib/modules/$kvers-slitaz/kernel/drivers/video \
		$fs/etc
	
	# Compress and install module
	lzma e $src/common/lib/modules/fglrx/build_mod/fglrx.ko \
			$fs/lib/modules/$kvers-slitaz/kernel/drivers/video/fglrx.ko.gz
	chown root $fs/lib/modules/$kvers-slitaz/kernel/drivers/video/fglrx.ko.gz
	chmod 0644 $fs/lib/modules/$kvers-slitaz/kernel/drivers/video/fglrx.ko.gz	
	
	cp -a $src/ATI_LICENSE.TXT $fs/usr/share/licenses/$PACKAGE
	
	cp -a $src/arch/x86/usr/lib/*.so $fs/usr/lib/
	cp -a $src/arch/x86/usr/sbin $fs/usr
	cp -a $src/arch/x86/usr/X11R6/bin/* $fs/usr/bin/

	cp -a $src/x740/usr/X11R6/lib/modules $fs/usr/lib/xorg
	cp -a $src/arch/x86/usr/X11R6/lib/*.so* $fs/usr/lib
	cp -a $src/arch/x86/usr/X11R6/lib/modules $fs/usr/lib/xorg	
	
	cp -a $src/common/etc $fs
	chmod 755 $fs/etc/ati/authatieventsd.sh 	
	cp -a $src/common/usr/sbin $fs/usr
	
	cp -a $src/common/usr/share/icons/* $fs/usr/share/pixmaps
	cp -a $src/common/usr/share/applications $fs/usr/share
	cp -a $src/common/usr/share/doc $fs/usr/share
	cp -a $src/common/usr/share/ati $fs/usr/share
	cp -a $src/common/usr/X11R6/bin/* $fs/usr/bin
}

pre_install()
{
	echo ""
	echo -e "\033[1m PROPRIETARY LICENSE:\033[0m $2"
	echo "================================================================================"
	echo "You are installing a package with proprietary license."
	echo "You must accept the license."
    echo "================================================================================"
    echo ""
}

post_install()
{
	echo "Processing post-install commands..."
	chroot "$1/" depmod -a ${EXTRAVERSION#_}-slitaz
	
	ln -sf $1/usr/lib/xorg/modules/dri $1/usr/lib/dri
	ln -sf $1/usr/lib/libfglrx_dm.so.1.0 $1/usr/lib/libfglrx_dm.so.1
	ln -sf $1/usr/lib/libfglrx_pp.so.1.0 $1/usr/lib/libfglrx_pp.so.1
	ln -sf $1/usr/lib/libfglrx_tvout.so.1.0 $1/usr/lib/libfglrx_tvout.so.1
	ln -sf $1/usr/lib/libfglrx_gamma.so.1.0 $1/usr/lib/libfglrx_gamma.so.1
	ln -sf $1/usr/lib/libGL.so.1.2 $1/usr/lib/libGL.so.1
	ln -sf $1/usr/lib/libGL.so.1.2 $1/usr/lib/libGL.so
	
	echo ""
	echo -e "\033[1m ATI LICENSE INFORMATION:\033[0m $2"
	echo "================================================================================"
	echo "For installing this package, you have to accept the $PACKAGE license."
    echo "The license is stored in /usr/share/licenses/$PACKAGE "    
    echo -n "Would you like to read the license (y/N) : "; read anser
    if [ "$anser" = "y" ]; then
		cat /usr/share/licenses/"$PACKAGE"/ATI_LICENSE.txt | more	
		echo "" 		
	fi
	echo "================================================================================"
	 echo -n "Do you accept the license (y/N) : "; read anser
    if [ "$anser" = "N" ]; then
		echo "You did not accept the license, Removing the pkg."	
		tazpkg remove "$PACKAGE"		
	fi
}

post_remove()
{
	echo "Processing post-remove commands..."
	depmod -a
}
